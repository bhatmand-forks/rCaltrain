apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        release
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
    defaultConfig {
        applicationId "me.ranmocy.rcaltrain"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 6
        versionName "2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.code.gson:gson:2.8.0'
    testImplementation "com.google.truth:truth:0.34"
    testImplementation "org.mockito:mockito-core:2.8.47"
    testImplementation "org.robolectric:robolectric:3.3.2"

    androidTestImplementation 'com.android.support:support-annotations:26.1.0'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestImplementation 'com.google.code.gson:gson:2.8.0'
    androidTestImplementation "com.google.truth:truth:0.34"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "android.arch.lifecycle:runtime:1.0.0-alpha9-1"
    implementation "android.arch.lifecycle:extensions:1.0.0-alpha9-1"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha9-1"
    implementation "android.arch.persistence.room:runtime:1.0.0-alpha9-1"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-alpha9-1"
    testImplementation "android.arch.persistence.room:testing:1.0.0-alpha9-1"
}

apply plugin: 'com.google.gms.google-services'

def Properties props = new Properties()
def propFile = new File('app/signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('keyStore') &&
            props.containsKey('keyStorePassword') &&
            props.containsKey('keyAlias') &&
            props.containsKey('keyAliasPassword')) {
        android.signingConfigs.release.storeFile = file(props['keyStore'])
        android.signingConfigs.release.storePassword = props['keyStorePassword']
        android.signingConfigs.release.keyAlias = props['keyAlias']
        android.signingConfigs.release.keyPassword = props['keyAliasPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
repositories {
    mavenCentral()
}
